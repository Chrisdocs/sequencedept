{"ast":null,"code":"var _jsxFileName = \"/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/Carousel/Carousel.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport \"./carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarouselItem = ({\n  children,\n  width\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-item\",\n    style: {\n      width: width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = CarouselItem;\n\nconst Carousel = ({\n  children\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [paused, setPaused] = useState(false);\n\n  const updateIndex = newIndex => {\n    if (newIndex < 0) {\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = 0;\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!paused) {\n        updateIndex(activeIndex + 1);\n      }\n    }, 10000);\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n  useEffect(_s(() => {\n    _s();\n\n    const handlers = useSwipeable({\n      onSwipedLeft: () => updateIndex(activeIndex + 1),\n      onSwipedRight: () => updateIndex(activeIndex - 1)\n    });\n  }, \"s1FKLEkRajd7B4AvjfDQYHBDtMY=\", false, function () {\n    return [useSwipeable];\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    ...handlers,\n    onMouseEnter: () => setPaused(true),\n    onMouseLeave: () => setPaused(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100}%)`\n      },\n      children: [React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${index === activeIndex ? \"active\" : \"\"}`,\n          onClick: () => {\n            updateIndex(index);\n          },\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Carousel, \"/mKeh0rqyEvPFPipKd5yfWDerFQ=\");\n\n_c2 = Carousel;\nexport default Carousel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"sources":["/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/Carousel/Carousel.jsx"],"names":["React","useEffect","useState","useSwipeable","CarouselItem","children","width","Carousel","activeIndex","setActiveIndex","paused","setPaused","updateIndex","newIndex","Children","count","interval","setInterval","clearInterval","handlers","onSwipedLeft","onSwipedRight","transform","map","child","index","cloneElement"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport \"./carousel.css\";\n\nexport const CarouselItem = ( { children, width } ) => {\n\treturn (\n\t\t<div className=\"carousel-item\" style={ { width: width } }>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst Carousel = ( { children } ) => {\n\tconst [activeIndex, setActiveIndex] = useState(0)\n\tconst [paused, setPaused] = useState(false);\n\n\tconst updateIndex = (newIndex) => {\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = React.Children.count(children) - 1;\n\t\t} else if (newIndex >= React.Children.count(children)) {\n\t\t\tnewIndex = 0;\n\t\t}\n\n\t\tsetActiveIndex(newIndex)\n\t}\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!paused) {\n\t\t\t\tupdateIndex(activeIndex + 1);\n\t\t\t}\n\t\t}, 10000);\n\n\t\treturn () => {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t};\n\t});\n\n\tuseEffect(() => {\n\n\t\tconst handlers =  useSwipeable({\n\t\t\tonSwipedLeft: () => updateIndex(activeIndex + 1),\n\t\t\tonSwipedRight: () => updateIndex(activeIndex - 1)\n\t\t});\n\t})\n\n\treturn (\n\t\t<div className=\"carousel\"\n\t\t{...handlers}\n\t\t\tonMouseEnter={() => setPaused(true)}\n\t\t\tonMouseLeave={() => setPaused(false)}\n\t\t\t>\n\t\t\t<div className=\"inner\" style={ { transform: `translateX(-${activeIndex * 100}%)` } }>\n\t\t\t\t{React.Children.map(children, (child, index) => {\n\t\t\t\t\treturn React.cloneElement(child, { width: \"100%\" });\n\t\t\t\t})};\n\t\t\t</div>\n\t\t\t<div className=\"indicators\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tupdateIndex(activeIndex - 1)\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</button>\n\t\t\t\t\t{React.Children.map(children, (child, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button className={`${index === activeIndex ? \"active\" : \"\"}`} onClick={() => {\n\t\t\t\t\t\t\t\tupdateIndex(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\tupdateIndex(activeIndex + 1);\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}