{"ast":null,"code":"var _jsxFileName = \"/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/EmailForm/EmailForm.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { useForm } from 'react-hook-form';\nimport { init, sendForm } from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninit('user_h5i4jKcOz7z58xA2biMrJ');\n\nfunction EmailForm() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    handleSubmit,\n    register,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = values => console.log(values);\n\n  const message = watch('message') || \"\";\n  const messageCharactersWatch = 250 - message.length;\n\n  const Contact = () => {\n    _s();\n\n    const [contactNumber, setContactNumber] = useState(\"000000\");\n\n    const generateContactNum = () => {\n      const numStr = \"000000\" + (Math.random() * 1000000 | 0);\n      setContactNumber(numStr.substring(numStr.length - 6));\n    };\n  };\n\n  _s(Contact, \"4BgSp8tKJlGO8vqgkcp+8oZlz64=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"contact_number\",\n        value: contactNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Name is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        \"aria-invalid\": errors.username ? \"true\" : \"false\",\n        ...register('username', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Email is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        ...register('email', {\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Invalid email address.\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), errors.message && errors.message.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"A message is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        placeholder: \"Message\",\n        maxLength: \"250\",\n        ...register('message', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message-chars\",\n        children: [messageCharactersWatch, \" characters left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(EmailForm, \"S1LyeUmLOCF7F/r37kLk7Oy/WFg=\", false, function () {\n  return [useForm];\n});\n\n_c = EmailForm;\n;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/EmailForm/EmailForm.jsx"],"names":["React","useState","useForm","init","sendForm","EmailForm","handleSubmit","register","watch","formState","errors","onSubmit","values","console","log","message","messageCharactersWatch","length","Contact","contactNumber","setContactNumber","generateContactNum","numStr","Math","random","substring","username","type","required","email","pattern","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./styles.css\";\nimport { useForm } from 'react-hook-form';\nimport { init, sendForm } from 'emailjs-com'\ninit('user_h5i4jKcOz7z58xA2biMrJ')\n\n\nfunction EmailForm() {\n\n    const { handleSubmit, register, watch, formState: {errors} } = useForm();\n    const onSubmit = values => console.log(values);\n\n    const message = watch('message') || \"\";\n    const messageCharactersWatch = 250 - message.length;\n\n    const Contact = () => {\n        const [contactNumber, setContactNumber] = useState(\"000000\");\n\n        const generateContactNum = () => {\n            const numStr = \"000000\" + (Math.random() * 1000000 | 0);\n            setContactNumber(numStr.substring(numStr.length - 6));\n        }\n    }\n\n    return(\n        <div className=\"contact\">\n            <h1>Contact</h1>\n            <form id='contact-form' onSubmit={handleSubmit(onSubmit)}>\n\n            <input type='hidden' name='contact_number' value={contactNumber} />\n                \n                {errors.username && errors.username.type === \"required\" && (\n                    <div role=\"alert\">Name is required<br/></div>\n                )}\n                <input \n                    placeholder=\"Name\"\n                    aria-invalid={errors.username ? \"true\" : \"false\"}\n                    {...register('username', {\n                        required: true\n                        })}\n                    />\n                <br/>\n\n                {errors.email && errors.email.type === \"required\" && (\n                    <div role=\"alert\">Email is required<br/></div>\n                )}\n                <input \n                type='email'\n                placeholder='Email'\n                {...register('email', {\n                    required: true,\n                    pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Invalid email address.\"\n                        } \n                    })}  />\n                <br/>\n\n                {errors.message && errors.message.type === \"required\" && (\n                    <div role=\"alert\">A message is required<br/></div>\n                )}\n                <textarea \n                name='message'\n                placeholder='Message'\n                maxLength='250'\n                {...register('message', {\n                    required: true \n                })} \n                />\n                <p className=\"message-chars\">{messageCharactersWatch} characters left</p>\n                <br/>\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EmailForm;"]},"metadata":{},"sourceType":"module"}