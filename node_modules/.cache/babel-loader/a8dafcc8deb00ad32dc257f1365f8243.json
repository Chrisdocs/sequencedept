{"ast":null,"code":"var _jsxFileName = \"/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/EmailForm/EmailForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmailForm() {\n  _s();\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = values => console.log(values);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        \"aria-invalid\": errors.username ? \"true\" : \"false\",\n        ...register('username', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), errors.username && errors.username.type === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"alert\",\n        children: [\"Name is required\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        ...register('email', {\n          required: \"Required\",\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Invalid email address.\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), errors.email && errors.email.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        placeholder: \"Message\",\n        ...register('message', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmailForm, \"uI5NAsXrTxF1zSs1gubwvGaybJg=\", false, function () {\n  return [useForm];\n});\n\n_c = EmailForm;\n;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/EmailForm/EmailForm.jsx"],"names":["React","useForm","EmailForm","handleSubmit","register","formState","errors","onSubmit","values","console","log","username","required","type","pattern","value","message","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAArC,MAAkDL,OAAO,EAA/D;;AACA,QAAMM,QAAQ,GAAGC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA3B;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA9C;AAAA,8BAEI;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,wBAAcD,MAAM,CAACK,QAAP,GAAkB,MAAlB,GAA2B,OAF7C;AAAA,WAGQP,QAAQ,CAAC,UAAD,EAAa;AACrBQ,UAAAA,QAAQ,EAAE;AADW,SAAb;AAHhB;AAAA;AAAA;AAAA;AAAA,cAFJ,EASSN,MAAM,CAACK,QAAP,IAAmBL,MAAM,CAACK,QAAP,CAAgBE,IAAhB,KAAyB,UAA5C,iBACG;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA,oDAAkC;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAVZ,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,eAcI;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,WAAW,EAAC,OAFZ;AAAA,WAGIT,QAAQ,CAAC,OAAD,EAAU;AAClBQ,UAAAA,QAAQ,EAAE,UADQ;AAElBE,UAAAA,OAAO,EAAE;AACLC,YAAAA,KAAK,EAAE,0CADF;AAELC,YAAAA,OAAO,EAAE;AAFJ;AAFS,SAAV;AAHZ;AAAA;AAAA;AAAA;AAAA,cAdJ,EAwBSV,MAAM,CAACW,KAAP,IAAgBX,MAAM,CAACW,KAAP,CAAaD,OAxBtC,eAyBI;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA2BI;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,WAAW,EAAC,SAFZ;AAAA,WAGIZ,QAAQ,CAAC,SAAD,EAAY;AACpBQ,UAAAA,QAAQ,EAAE;AADU,SAAZ;AAHZ;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAkCI;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GA/CQV,S;UAEmDD,O;;;KAFnDC,S;AA+CR;AAED,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport { useForm } from 'react-hook-form';\n\n\nfunction EmailForm() {\n\n    const { handleSubmit, register, formState: {errors} } = useForm();\n    const onSubmit = values => console.log(values);\n\n    return(\n        <div className=\"contact\">\n            <h1>Contact</h1>\n            <form id='contact-form' onSubmit={handleSubmit(onSubmit)}>\n                \n                <input \n                    placeholder=\"Name\"\n                    aria-invalid={errors.username ? \"true\" : \"false\"}\n                    {...register('username', {\n                        required: true\n                        })}\n                    />\n                    {errors.username && errors.username.type === \"required\" && (\n                        <div role=\"alert\">Name is required<br/></div>\n                    )}\n                <br/>\n\n                <input \n                type='email'\n                placeholder='Email'\n                {...register('email', {\n                    required: \"Required\",\n                    pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Invalid email address.\"\n                        } \n                    })}  />\n                    {errors.email && errors.email.message}\n                <br/>\n\n                <textarea \n                name='message'\n                placeholder='Message'\n                {...register('message', {\n                    required: true \n                    })} \n                />\n                <br/>\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EmailForm;"]},"metadata":{},"sourceType":"module"}