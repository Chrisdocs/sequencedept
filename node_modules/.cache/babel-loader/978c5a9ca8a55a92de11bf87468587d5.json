{"ast":null,"code":"var _jsxFileName = \"/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/Carousel/Carousel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarouselItem = ({\n  children,\n  width\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-item\",\n    style: {\n      width: width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c = CarouselItem;\n\nconst Carousel = ({\n  children\n}) => {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [paused, setPaused] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!paused) {\n        updateIndex(activeIndex + 1);\n      }\n    }, 10000);\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    onMouseEnter: () => setPaused(true),\n    onMouseLeave: () => setPaused(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100}%)`\n      },\n      children: [React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${index === activeIndex ? \"active\" : \"\"}`,\n          onClick: () => {\n            updateIndex(index);\n          },\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Carousel, \"K0leew7kIfEIM73GcbgQUKHNMMk=\");\n\n_c2 = Carousel;\nexport default Carousel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"sources":["/Users/chriswolfe/Documents/webDev/Clients/SQ-DPT/my-app/src/components/Carousel/Carousel.jsx"],"names":["React","useEffect","useState","CarouselItem","children","width","Carousel","activeIndex","setActiveIndex","paused","setPaused","interval","setInterval","updateIndex","clearInterval","transform","Children","map","child","index","cloneElement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAF,KAA2B;AACtD,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAG;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAAvC;AAAA,cACED;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CANM;KAAMD,Y;;AAQb,MAAMG,QAAQ,GAAG,CAAE;AAAEF,EAAAA;AAAF,CAAF,KAAoB;AAAA;;AACpC,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAClC,UAAI,CAACH,MAAL,EAAa;AACZI,QAAAA,WAAW,CAACN,WAAW,GAAG,CAAf,CAAX;AACA;AACD,KAJ2B,EAIzB,KAJyB,CAA5B;AAMA,WAAO,MAAM;AACZ,UAAII,QAAJ,EAAc;AACbG,QAAAA,aAAa,CAACH,QAAD,CAAb;AACA;AACD,KAJD;AAKA,GAZQ,CAAT;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AACC,IAAA,YAAY,EAAE,MAAMD,SAAS,CAAC,IAAD,CAD9B;AAEC,IAAA,YAAY,EAAE,MAAMA,SAAS,CAAC,KAAD,CAF9B;AAAA,4BAIC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAG;AAAEK,QAAAA,SAAS,EAAG,eAAcR,WAAW,GAAG,GAAI;AAA9C,OAA/B;AAAA,iBACEP,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA6B,CAACc,KAAD,EAAQC,KAAR,KAAkB;AAC/C,4BAAOnB,KAAK,CAACoB,YAAN,CAAmBF,KAAnB,EAA0B;AAAEb,UAAAA,KAAK,EAAE;AAAT,SAA1B,CAAP;AACA,OAFA,CADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eASC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACC;AACC,QAAA,OAAO,EAAE,MAAM;AACdQ,UAAAA,WAAW,CAACN,WAAW,GAAG,CAAf,CAAX;AACA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAQGP,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA6B,CAACc,KAAD,EAAQC,KAAR,KAAkB;AAC/C,4BACC;AAAQ,UAAA,SAAS,EAAG,GAAEA,KAAK,KAAKZ,WAAV,GAAwB,QAAxB,GAAmC,EAAG,EAA5D;AAA+D,UAAA,OAAO,EAAE,MAAM;AAC7EM,YAAAA,WAAW,CAACM,KAAD,CAAX;AACA,WAFD;AAAA,oBAIEA,KAAK,GAAG;AAJV;AAAA;AAAA;AAAA;AAAA,gBADD;AAQA,OATA,CARH,eAkBE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACtBN,UAAAA,WAAW,CAACN,WAAW,GAAG,CAAf,CAAX;AACA,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqCA,CAvDD;;GAAMD,Q;;MAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./carousel.css\";\n\nexport const CarouselItem = ( { children, width } ) => {\n\treturn (\n\t\t<div className=\"carousel-item\" style={ { width: width } }>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst Carousel = ( { children } ) => {\n\tconst [activeIndex, setActiveIndex] = useState(0)\n\tconst [paused, setPaused] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!paused) {\n\t\t\t\tupdateIndex(activeIndex + 1);\n\t\t\t}\n\t\t}, 10000);\n\n\t\treturn () => {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn (\n\t\t<div className=\"carousel\"\n\t\t\tonMouseEnter={() => setPaused(true)}\n\t\t\tonMouseLeave={() => setPaused(false)}\n\t\t\t>\n\t\t\t<div className=\"inner\" style={ { transform: `translateX(-${activeIndex * 100}%)` } }>\n\t\t\t\t{React.Children.map(children, (child, index) => {\n\t\t\t\t\treturn React.cloneElement(child, { width: \"100%\" });\n\t\t\t\t})};\n\t\t\t</div>\n\t\t\t<div className=\"indicators\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tupdateIndex(activeIndex - 1)\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</button>\n\t\t\t\t\t{React.Children.map(children, (child, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button className={`${index === activeIndex ? \"active\" : \"\"}`} onClick={() => {\n\t\t\t\t\t\t\t\tupdateIndex(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\tupdateIndex(activeIndex + 1);\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}